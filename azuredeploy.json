{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The name of the Administrator of the new VMs and Domain"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the Administrator account of the new VMs and Domain"
      }
    },
    "adVMSize": {
      "type": "string",
      "allowedValues": [
        "Standard_A1_v2",
        "Standard_A2_v2",
        "Standard_A4_v2",
        "Standard_A8_v2",
        "Standard_D1_v2",
        "Standard_D2_v2",
        "Standard_D3_v2",
        "Standard_D4_v2",
        "Standard_D5_v2",
        "Standard_D11_v2",
        "Standard_D12_v2",
        "Standard_D13_v2",
        "Standard_D14_v2",
        "Standard_D15_v2",
        "Standard_D1",
        "Standard_D2",
        "Standard_D3",
        "Standard_D4",
        "Standard_D11",
        "Standard_D12",
        "Standard_D13",
        "Standard_D14",
        "Standard_DS1",
        "Standard_DS2",
        "Standard_DS3",
        "Standard_DS4",
        "Standard_DS11",
        "Standard_DS12",
        "Standard_DS13",
        "Standard_DS14",
        "Standard_DS1_v2",
        "Standard_DS2_v2",
        "Standard_DS3_v2",
        "Standard_DS4_v2",
        "Standard_DS5_v2",
        "Standard_DS11_v2",
        "Standard_DS12_v2",
        "Standard_DS13_v2",
        "Standard_DS14_v2",
        "Standard_DS15_v2",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS4",
        "Standard_GS5"
      ],
      "metadata": {
        "description": "The size of the AD VMs Created"
      },
      "defaultValue": "Standard_D1"
    },
    "sqlVMSize": {
      "type": "string",
      "allowedValues": [
        "Standard_A1_v2",
        "Standard_A2_v2",
        "Standard_A4_v2",
        "Standard_A8_v2",
        "Standard_DS1",
        "Standard_DS2",
        "Standard_DS3",
        "Standard_DS4",
        "Standard_DS11",
        "Standard_DS12",
        "Standard_DS13",
        "Standard_DS14",
        "Standard_DS1_v2",
        "Standard_DS2_v2",
        "Standard_DS3_v2",
        "Standard_DS4_v2",
        "Standard_DS5_v2",
        "Standard_DS11_v2",
        "Standard_DS12_v2",
        "Standard_DS13_v2",
        "Standard_DS14_v2",
        "Standard_DS15_v2",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS4",
        "Standard_GS5"
      ],
      "metadata": {
        "description": "The size of the SQL VMs Created"
      },
      "defaultValue": "Standard_DS4"
    },
    "witnessVMSize": {
      "type": "string",
      "allowedValues": [
        "Standard_A1_v2",
        "Standard_A2_v2",
        "Standard_A4_v2",
        "Standard_A8_v2",
        "Standard_DS1",
        "Standard_DS2",
        "Standard_DS3",
        "Standard_DS4",
        "Standard_DS11",
        "Standard_DS12",
        "Standard_DS13",
        "Standard_DS14",
        "Standard_DS1_v2",
        "Standard_DS2_v2",
        "Standard_DS3_v2",
        "Standard_DS4_v2",
        "Standard_DS5_v2",
        "Standard_DS11_v2",
        "Standard_DS12_v2",
        "Standard_DS13_v2",
        "Standard_DS14_v2",
        "Standard_DS15_v2",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS4",
        "Standard_GS5"
      ],
      "metadata": {
        "description": "The size of the Witness VM Created"
      },
      "defaultValue": "Standard_DS1"
    },
    "domainName": {
      "type": "string",
      "metadata": {
        "description": "The FQDN of the AD Domain created "
      },
      "defaultValue": "contoso.local"
    },
    "sqlServerServiceAccountUserName": {
      "type": "string",
      "metadata": {
        "description": "The SQL Server Service Account name"
      },
      "defaultValue": "sqlservice"
    },
    "sqlServerServiceAccountPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The SQL Server Service Account password"
      }
    },
    "dcStorageAccountType": {
      "type": "string",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "The type of the DC Storage Account created"
      },
      "defaultValue": "Standard_LRS"
    },
    "sqlStorageAccountType": {
      "type": "string",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "The type of the Sql Server Storage Account created"
      },
      "defaultValue": "Standard_LRS"
    },
    "virtualNetworkAddressRange": {
      "type": "string",
      "metadata": {
        "description": "The address range of the new VNET in CIDR format"
      },
      "defaultValue": "10.0.0.0/16"
    },
    "staticSubnet": {
      "type": "string",
      "metadata": {
        "description": "The address range of the subnet static IPs are allocated from in the new VNET"
      },
      "defaultValue": "10.0.0.0/24"
    },
    "lanSubnet": {
      "type": "string",
      "metadata": {
        "description": "The address range of the SQL subnet created in the new VNET"
      },
      "defaultValue": "10.0.1.0/24"
    },
    "dmzSubnet": {
      "type": "string",
      "metadata": {
        "description": "The address range of the SQL subnet created in the new VNET"
      },
      "defaultValue": "10.0.2.0/24"
    },
    "adPDCNICIPAddress": {
      "type": "string",
      "metadata": {
        "description": "The IP address of the primary AD VM"
      },
      "defaultValue": "10.0.0.4"
    },
    "adBDCNICIPAddress": {
      "type": "string",
      "metadata": {
        "description": "The IP address of the backup AD VM"
      },
      "defaultValue": "10.0.0.5"
    },
    "sqlLBIPAddress": {
      "type": "string",
      "metadata": {
        "description": "The IP address of the new SQL Server Internal Load Balancer"
      },
      "defaultValue": "10.0.1.9"
    },
    "deploymentPrefix": {
      "type": "string",
      "metadata": {
        "description": "The DNS Prefix for the Public IP Address for the Always On Cluster"
      },
      "defaultValue": "aodns"
    },
    "autoPatchingDay": {
      "type": "string",
      "allowedValues": [
        "Never",
        "Everyday",
        "Sunday",
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday"
      ],
      "metadata": {
        "description": "The day of a week for auto patching"
      },
      "defaultValue": "Sunday"
    },
    "autoPatchingStartHour": {
      "type": "string",
      "allowedValues": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "10",
        "11",
        "12",
        "13",
        "14",
        "15",
        "16",
        "17",
        "18",
        "19",
        "20",
        "21",
        "22",
        "23"
      ],
      "metadata": {
        "description": "The start hour of a day for auto patching"
      },
      "defaultValue": "2"
    },
    "sqlAOListenerPort": {
      "type": "string",
      "metadata": {
        "description": "The Sql AG Listener port"
      },
      "defaultValue": "1433"
    },
    "sqlAOListenerName": {
      "type": "string",
      "metadata": {
        "description": "The Sql AG Listener Name"
      },
      "defaultValue": "alwayson-ag-listener"
    },
    "sqlServerVersion": {
      "type": "string",
      "allowedValues": [
        "SQL2012SP3-WS2012R2",
        "SQL2014SP1-WS2012R2",
        "SQL2016-WS2012R2",
        "SQL2016SP1-WS2016"
      ],
      "metadata": {
        "description": "The Sql Server Version"
      },
      "defaultValue": "SQL2016SP1-WS2016"
    },
    "sqlServerSku": {
      "type": "string",
      "allowedValues": [
        "SQLDEV",
        "Enterprise"
      ],
      "metadata": {
        "description": "The Sql Server Version"
      },
      "defaultValue": "SQLDEV"
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "Auto-generated container in staging storage account to receive post-build staging folder upload"
      }
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "Auto-generated token to access _artifactsLocation"
      }
    }
  },
  "variables": {
    "baseName": "[toLower(concat('aha', substring(resourceGroup().name, lastIndexOf(resourceGroup().name, '-'))))]",
    "lbSettings": {
      "rdpLBFE": "rdpLBFE",
      "sqlLBFE": "sqlLBFE",
      "adLBBE": "adLBBE",
      "sqlLBBE": "sqlLBBE",
      "rdpLBName": "[concat(variables('baseName'), '-rdp-loadbalancer')]",
      "sqlLBName": "[concat(variables('baseName'), '-sql-loadbalancer')]",
      "webLBName": "[concat(variables('baseName'), '-web-loadbalancer')]",
      "webLBFE": "webLBFE",
      "webLBBE": "webLBBE"
    },
    "subnetNames": {
      "staticSubnetName": "staticSubnet",
      "lanSubnetName": "lanSubnet",
      "dmzSubnetName": "dmzSubnet"
    },
    "RDPNAT": "RDP",
    "SQLAOProbe": "SQLAlwaysOnEndPointProbe",
    "WebProbe": "WebEndPointProbe",
    "primaryDCIPAddressName": "[concat(variables('baseName'), '-dc01-ip')]",
    "backupDCIPAddressName": "[concat(variables('baseName'), '-dc02-ip')]",
    "sql1AddressName": "[concat(variables('baseName'), '-sql01-ip')]",
    "sql2AddressName": "[concat(variables('baseName'), '-sql02-ip')]",
    "webAddressName": "[concat(variables('baseName'), '-web-loadbalancer-ip')]",
    "storageAccountNames": {
      "dcStorageAccountName": "[replace(concat(variables('baseName'), 'dcstorage'), '-', '')]",
      "sqlStorageAccountName": "[replace(concat(variables('baseName'), 'sqltorage'),'-', '')]",
      "fswStorageAccountName": "[replace(concat(variables('baseName'), 'fswstorage'),'-', '')]",
      "webStorageAccountName": "[replace(concat(variables('baseName'), 'webstorage'),'-', '')]",
      "diagStorageAccountName": "[replace(concat(variables('baseName'), 'diagstorage'),'-', '')]"
    },
    "vmSettings": {
      "availabilitySets": {
        "sqlAvailabilitySetName": "[concat(variables('baseName'), '-sql-availability-set')]",
        "adAvailabilitySetName": "[concat(variables('baseName'), '-dc-availability-set')]",
        "webAvailabilitySetName": "[concat(variables('baseName'), '-web-availability-set')]"
      },
      "noOfSqlVMs": 2,
      "vmContainerName": "vhds",
      "adPDCVMName": "[concat(variables('baseName'), '-dc01')]",
      "adBDCVMName": "[concat(variables('baseName'), '-dc02')]",
      "sqlVMName": "[concat(variables('baseName'), '-sql')]",
      "sqlwVMName": "[concat(variables('baseName'), '-fsw')]",
      "windowsImagePublisher": "MicrosoftWindowsServer",
      "windowsImageOffer": "WindowsServer",
      "windowsImageSKU": "2016-Datacenter",
      "sqlImagePublisher": "MicrosoftSQLServer",
      "sqlImageOffer": "[parameters('sqlServerVersion')]",
      "rdpPort": 3389,
      "windowsDiskSize": 128,
      "sqlDiskSize": 1000
    },
    "sqlAOEPName": "[concat(variables('baseName'),'-hadr-ip')]",
    "sharePath": "[concat(variables('baseName'),'-fsw')]",
    "clusterName": "[concat(variables('baseName'),'-fc')]",
    "adPDCNicName": "[concat(variables('vmSettings').adPDCVMName,'-nic')]",
    "adBDCNicName": "[concat(variables('vmSettings').adBDCVMName,'-nic')]",
    "sqlwNicName": "[concat(variables('vmSettings').sqlwVMName,'-nic')]",
    "VnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
    "staticSubnetRef": "[concat(variables('VnetID'),'/subnets/',variables('subnetNames').staticSubnetName)]",
    "lanSubnetRef": "[concat(variables('VnetID'),'/subnets/',variables('subnetNames').lanSubnetName)]",
    "dmzSubnetRef": "[concat(variables('VnetID'),'/subnets/',variables('subnetNames').dmzSubnetName)]",
    "ids": {
      "adNicId": "[resourceId('Microsoft.Network/networkInterfaces',variables('adPDCNicName'))]",
      "rdplbID": "[resourceId('Microsoft.Network/loadBalancers',variables('lbSettings').rdpLBName)]",
      "sqllbID": "[resourceId('Microsoft.Network/loadBalancers',variables('lbSettings').sqlLBName)]",
      "weblbID": "[resourceId('Microsoft.Network/loadBalancers',variables('lbSettings').webLBName)]"
    },
    "derivedIds": {
      "adIPConfigID": "[concat(variables('ids').adNicId,'/ipConfigurations/ipconfig1')]",
      "rdplbFEConfigID": "[concat(variables('ids').rdplbID,'/frontendIPConfigurations/',variables('lbSettings').rdpLBFE)]",
      "adRDPNATRuleID": "[concat(variables('ids').rdplbID,'/inboundNatRules/',variables('RDPNAT'))]",
      "adBEAddressPoolID": "[concat(variables('ids').rdplbID,'/backendAddressPools/',variables('lbSettings').adLBBE)]",
      "sqlBEAddressPoolID": "[concat(variables('ids').sqllbID,'/backendAddressPools/',variables('lbSettings').sqlLBBE)]",
      "sqllbFEConfigID": "[concat(variables('ids').sqllbID,'/frontendIPConfigurations/',variables('lbSettings').sqlLBFE)]",
      "sqllbProbeID": "[concat(variables('ids').sqllbID,'/probes/',variables('SQLAOProbe'))]",
      "webBEAddressPoolID": "[concat(variables('ids').weblbID,'/backendAddressPools/',variables('lbSettings').webLBBE)]",
      "weblbFEConfigID": "[concat(variables('ids').weblbID,'/frontendIPConfigurations/',variables('lbSettings').webLBFE)]",
      "weblbProbeID": "[concat(variables('ids').weblbID,'/probes/',variables('webProbe'))]",
      "webLBIp": "[resourceId(resourceGroup().Name,'Microsoft.Network/publicIpAddresses', variables('webAddressName'))]"
    },
    "Monday": true,
    "Tuesday": true,
    "Wednesday": true,
    "Thursday": true,
    "Friday": true,
    "Saturday": true,
    "Sunday": true,
    "Never": false,
    "Everyday": true,
    "virtualNetworkName": "[concat(variables('baseName'), '-vnet')]",
    "subnets": [
      {
        "name": "[variables('subnetNames').staticSubnetName]",
        "properties": {
          "addressPrefix": "[parameters('staticSubnet')]"
        }
      },
      {
        "name": "[variables('subnetNames').lanSubnetName]",
        "properties": {
          "addressPrefix": "[parameters('lanSubnet')]"
        }
      },
      {
        "name": "[variables('subnetNames').dmzSubnetName]",
        "properties": {
          "addressPrefix": "[parameters('dmzSubnet')]"
        }
      }
    ],
    "configuration": {
      "vnetwithDNSTemplateURL": "[concat(parameters('_artifactsLocation'),'/nestedtemplates/vnet-with-dns-server.json', parameters('_artifactsLocationSasToken'))]",
      "nicTemplateURL": "[concat(parameters('_artifactsLocation'),'/nestedtemplates/nic.json', parameters('_artifactsLocationSasToken'))]",
      "rdpIPAdressSetupURL": "[concat(parameters('_artifactsLocation'),'/nestedtemplates/publicip-rdp.json', parameters('_artifactsLocationSasToken'))]",
      "vnetSetupURL": "[concat(parameters('_artifactsLocation'),'/nestedtemplates/vnet-new.json', parameters('_artifactsLocationSasToken'))]",
      "setupLBsUrl": "[concat(parameters('_artifactsLocation'),'/nestedtemplates/setupLBs.json', parameters('_artifactsLocationSasToken'))]",
      "creatingNicsUrl": "[concat(parameters('_artifactsLocation'),'/nestedtemplates/creatingNICS.json', parameters('_artifactsLocationSasToken'))]",
      "storageAccountVirtualNetworkPublicIP": "[concat(parameters('_artifactsLocation'),'/nestedtemplates/storageAccountVirtualNetworkPublicIP.json', parameters('_artifactsLocationSasToken'))]",
      "provisioningVMs": "[concat(parameters('_artifactsLocation'),'/nestedtemplates/provisioningVMs.json', parameters('_artifactsLocationSasToken'))]",
      "configuringBackupADVM": "[concat(parameters('_artifactsLocation'),'/nestedtemplates/configuringBackupADVM.json', parameters('_artifactsLocationSasToken'))]",
      "preparingAlwaysOnSqlServer": "[concat(parameters('_artifactsLocation'),'/nestedtemplates/preparingSqlServer.json', parameters('_artifactsLocationSasToken'))]",
      "configuringAlwaysOn": "[concat(parameters('_artifactsLocation'),'/nestedtemplates/configuringAlwaysOn.json', parameters('_artifactsLocationSasToken'))]",
      "adPDCModulesURL": "[concat(parameters('_artifactsLocation'),'/DSC/DSCPackage.zip', parameters('_artifactsLocationSasToken'))]",
      "adPDCConfigurationFunction": "CreateADPDC.ps1\\CreateADPDC",
      "adBDCModulesURL": "[concat(parameters('_artifactsLocation'),'/DSC/DSCPackage.zip', parameters('_artifactsLocationSasToken'))]",
      "adBDCConfigurationFunction": "CreateADBDC.ps1\\CreateADBDC",
      "fswModulesURL": "[concat(parameters('_artifactsLocation'),'/DSC/DSCPackage.zip', parameters('_artifactsLocationSasToken'))]",
      "fswConfigurationFunction": "CreateFileShareWitness.ps1\\CreateFileShareWitness",
      "sqlAOPrepareModulesURL": "[concat(parameters('_artifactsLocation'),'/DSC/DSCPackage.zip', parameters('_artifactsLocationSasToken'))]",
      "sqlAOPrepareConfigurationFunction": "PrepareAlwaysOnSqlServer.ps1\\PrepareAlwaysOnSqlServer",
      "createClusterModulesURL": "[concat(parameters('_artifactsLocation'),'/DSC/DSCPackage.zip', parameters('_artifactsLocationSasToken'))]",
      "createClusterConfigurationFunction": "CreateFailoverCluster.ps1\\CreateFailoverCluster"
    }
  },
  "resources": [
    {
      "name": "StorageAccountVirtualNetworkPublicIP",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "comments": "This resource will create storage accounts for Active Directory, SQL Server, File Share Witness and Diagnostics. It will also create the Virtual Network and public IP addresses",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').storageAccountVirtualNetworkPublicIP]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[resourceGroup().location]"
          },
          "sqlStorageAccountName": {
            "value": "[variables('storageAccountNames').sqlStorageAccountName]"
          },
          "fswStorageAccountName": {
            "value": "[variables('storageAccountNames').fswStorageAccountName]"
          },
          "dcStorageAccountName": {
            "value": "[variables('storageAccountNames').dcStorageAccountName]"
          },
          "diagStorageAccountName": {
            "value": "[variables('storageAccountNames').diagStorageAccountName]"
          },
          "SqlStorageAccountType": {
            "value": "[parameters('sqlStorageAccountType')]"
          },
          "DcStorageAccountType": {
            "value": "[parameters('dcStorageAccountType')]"
          },
          "primaryDCIPAddressNameWithSuffix": {
            "value": "[variables('primaryDCIPAddressName')]"
          },
          "backupDCIPAddressNameWithSuffix": {
            "value": "[variables('backupDCIPAddressName')]"
          },
          "sql1AddressNameWithSuffix": {
            "value": "[variables('sql1AddressName')]"
          },
          "sql2AddressNameWithSuffix": {
            "value": "[variables('sql2AddressName')]"
          },
          "webAddressNameWithSuffix": {
            "value": "[variables('webAddressName')]"
          },
          "virtualNetworkName": {
            "value": "[variables('virtualNetworkName')]"
          },
          "virtualNetworkAddressRange": {
            "value": "[parameters('virtualNetworkAddressRange')]"
          },
          "subnets": {
            "value": "[variables('subnets')]"
          }
        }
      }
    },
    {
      "name": "LoadBalancers",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "comments": "Create Load Balancers for SQL and DC",
      "dependsOn": [
        "Microsoft.Resources/deployments/StorageAccountVirtualNetworkPublicIP"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').setupLBsUrl]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[resourceGroup().location]"
          },
          "staticSubnetRef": {
            "value": "[variables('lanSubnetRef')]"
          },
          "sqlLBName": {
            "value": "[variables('lbSettings').sqlLBName]"
          },
          "sqlLBFE": {
            "value": "[variables('lbSettings').sqlLBFE]"
          },
          "sqlLBIPAddress": {
            "value": "[parameters('sqlLBIPAddress')]"
          },
          "sqlLBBE": {
            "value": "[variables('lbSettings').sqlLBBE]"
          },
          "sqlLBBEID": {
            "value": "[variables('derivedIds').sqlBEAddressPoolID]"
          },
          "sqllbFEConfigID": {
            "value": "[variables('derivedIds').sqllbFEConfigID]"
          },
          "sqllbProbeID": {
            "value": "[variables('derivedIds').sqllbProbeID]"
          },
          "SQLAOProbe": {
            "value": "[variables('SQLAOProbe')]"
          },
          "webLBName": {
            "value": "[variables('lbSettings').webLBName]"
          },
          "webLBIp": {
            "value": "[variables('derivedIds').webLBIp]"
          },
          "webLBFE": {
            "value": "[variables('lbSettings').webLBFE]"
          },
          "webLBBE": {
            "value": "[variables('lbSettings').webLBBE]"
          },
          "webLBBEID": {
            "value": "[variables('derivedIds').webBEAddressPoolID]"
          },
          "weblbFEConfigID": {
            "value": "[variables('derivedIds').weblbFEConfigID]"
          },
          "weblbProbeID": {
            "value": "[variables('derivedIds').weblbProbeID]"
          },
          "webProbe": {
            "value": "[variables('webProbe')]"
          }
        }
      }
    },
    {
      "name": "CreatingNetworkInterfaces",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/LoadBalancers"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').creatingNicsUrl]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[resourceGroup().location]"
          },
          "adPDCNicName": {
            "value": "[variables('adPDCNicName')]"
          },
          "adPDCNICIPAddress": {
            "value": "[parameters('adPDCNICIPAddress')]"
          },
          "staticSubnetRef": {
            "value": "[variables('staticSubnetRef')]"
          },
          "adBEAddressPoolID": {
            "value": "[variables('derivedIds').adBEAddressPoolID]"
          },
          "adRDPNATRuleID": {
            "value": "[variables('derivedIds').adRDPNATRuleID]"
          },
          "adBDCNicName": {
            "value": "[variables('adBDCNicName')]"
          },
          "adBDCNICIPAddress": {
            "value": "[parameters('adBDCNICIPAddress')]"
          },
          "sqlVMName": {
            "value": "[variables('vmSettings').sqlVMName]"
          },
          "sqlSubnetRef": {
            "value": "[variables('lanSubnetRef')]"
          },
          "sqlBEAddressPoolID": {
            "value": "[variables('derivedIds').sqlBEAddressPoolID]"
          },
          "sqlwNicName": {
            "value": "[variables('sqlwNicName')]"
          },
          "primaryDCIPAddressNameWithSuffix": {
            "value": "[variables('primaryDCIPAddressName')]"
          },
          "backupDCIPAddressNameWithSuffix": {
            "value": "[variables('backupDCIPAddressName')]"
          },
          "sql1AddressNameWithSuffix": {
            "value": "[variables('sql1AddressName')]"
          },
          "sql2AddressNameWithSuffix": {
            "value": "[variables('sql2AddressName')]"
          }
        }
      }
    },

    {
      "name": "ProvisioningVMs",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/CreatingNetworkInterfaces"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').provisioningVMs]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adPDCVMName": {
            "value": "[variables('vmSettings').adPDCVMName]"
          },
          "adAvailabilitySetName": {
            "value": "[variables('vmSettings').availabilitySets.adAvailabilitySetName]"
          },
          "sqlAvailabilitySetName": {
            "value": "[variables('vmSettings').availabilitySets.sqlAvailabilitySetName]"
          },
          "sqlStorageAccountName": {
            "value": "[variables('storageAccountNames').sqlStorageAccountName]"
          },
          "dcStorageAccountName": {
            "value": "[variables('storageAccountNames').dcStorageAccountName]"
          },
          "diagStorageAccountName": {
            "value": "[variables('storageAccountNames').diagStorageAccountName]"
          },
          "fwstorageName": {
            "value": "[variables('storageAccountNames').fswStorageAccountName]"
          },
          "location": {
            "value": "[resourceGroup().location]"
          },
          "adVMSize": {
            "value": "[parameters('adVMSize')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "adImagePublisher": {
            "value": "[variables('vmSettings').windowsImagePublisher]"
          },
          "adImageOffer": {
            "value": "[variables('vmSettings').windowsImageOffer]"
          },
          "adImageSKU": {
            "value": "[variables('vmSettings').windowsImageSKU]"
          },
          "vmContainerName": {
            "value": "[variables('vmSettings').vmContainerName]"
          },
          "adPDCNicName": {
            "value": "[variables('adPDCNicName')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "adPDCConfigurationFunction": {
            "value": "[variables('configuration').adPDCConfigurationFunction]"
          },
          "adPDCModulesURL": {
            "value": "[variables('configuration').adPDCModulesURL]"
          },
          "adBDCVMName": {
            "value": "[variables('vmSettings').adBDCVMName]"
          },
          "adBDCNicName": {
            "value": "[variables('adBDCNicName')]"
          },
          "sqlVMName": {
            "value": "[variables('vmSettings').sqlVMName]"
          },
          "sqlVMSize": {
            "value": "[parameters('sqlVMSize')]"
          },
          "fswImagePublisher": {
            "value": "[variables('vmSettings').windowsImagePublisher]"
          },
          "fswImageOffer": {
            "value": "[variables('vmSettings').windowsImageOffer]"
          },
          "fswImageSKU": {
            "value": "[variables('vmSettings').windowsImageSKU]"
          },
          "sqlImagePublisher": {
            "value": "[variables('vmSettings').sqlImagePublisher]"
          },
          "sqlImageOffer": {
            "value": "[variables('vmSettings').sqlImageOffer]"
          },
          "sqlImageSKU": {
            "value": "[parameters('sqlServerSku')]"
          },
          "witnessVMSize": {
            "value": "[parameters('witnessVMSize')]"
          },
          "sqlwVMName": {
            "value": "[variables('vmSettings').sqlwVMName]"
          },
          "sqlwNicName": {
            "value": "[variables('sqlwNicName')]"
          }
        }
      }
    }
    //{
    //  "name": "UpdatingDNStoPrimaryADVM",
    //  "type": "Microsoft.Resources/deployments",
    //  "apiVersion": "2015-01-01",
    //  "dependsOn": [
    //    "Microsoft.Resources/deployments/ProvisioningVMs"
    //  ],
    //  "properties": {
    //    "mode": "Incremental",
    //    "templateLink": {
    //      "uri": "[variables('configuration').vnetwithDNSTemplateURL]",
    //      "contentVersion": "1.0.0.0"
    //    },
    //    "parameters": {
    //      "location": {
    //        "value": "[resourceGroup().location]"
    //      },
    //      "virtualNetworkName": {
    //        "value": "[variables('virtualNetworkName')]"
    //      },
    //      "virtualNetworkAddressRange": {
    //        "value": "[parameters('virtualNetworkAddressRange')]"
    //      },
    //      "subnets": {
    //        "value": "[variables('subnets')]"
    //      },
    //      "DNSServerAddress": {
    //        "value": [
    //          "[parameters('adPDCNICIPAddress')]"
    //        ]
    //      }
    //    }
    //  }
    //},
    //{
    //  "name": "ConfiguringBackupADVM",
    //  "type": "Microsoft.Resources/deployments",
    //  "apiVersion": "2015-01-01",
    //  "dependsOn": [
    //    "Microsoft.Resources/deployments/ProvisioningVMs"
    //  ],
    //  "properties": {
    //    "mode": "Incremental",
    //    "templateLink": {
    //      "uri": "[variables('configuration').configuringBackupADVM]",
    //      "contentVersion": "1.0.0.0"
    //    },
    //    "parameters": {
    //      "location": {
    //        "value": "[resourceGroup().location]"
    //      },
    //      "adBDCVMName": {
    //        "value": "[variables('vmSettings').adBDCVMName]"
    //      },
    //      "adminUsername": {
    //        "value": "[parameters('adminUsername')]"
    //      },
    //      "adminPassword": {
    //        "value": "[parameters('adminPassword')]"
    //      },
    //      "domainName": {
    //        "value": "[parameters('domainName')]"
    //      },
    //      "adBDCConfigurationFunction": {
    //        "value": "[variables('configuration').adBDCConfigurationFunction]"
    //      },
    //      "adBDCModulesURL": {
    //        "value": "[variables('configuration').adBDCModulesURL]"
    //      }
    //    }
    //  }
    //},
    //{
    //  "name": "UpdatingDNSwithBackupADVM",
    //  "type": "Microsoft.Resources/deployments",
    //  "apiVersion": "2015-01-01",
    //  "dependsOn": [
    //    "Microsoft.Resources/deployments/ConfiguringBackupADVM"
    //  ],
    //  "properties": {
    //    "mode": "Incremental",
    //    "templateLink": {
    //      "uri": "[variables('configuration').vnetwithDNSTemplateURL]",
    //      "contentVersion": "1.0.0.0"
    //    },
    //    "parameters": {
    //      "location": {
    //        "value": "[resourceGroup().location]"
    //      },
    //      "virtualNetworkName": {
    //        "value": "[variables('virtualNetworkName')]"
    //      },
    //      "virtualNetworkAddressRange": {
    //        "value": "[parameters('virtualNetworkAddressRange')]"
    //      },
    //      "subnets": {
    //        "value": "[variables('subnets')]"
    //      },
    //      "DNSServerAddress": {
    //        "value": [
    //          "[parameters('adPDCNICIPAddress')]",
    //          "[parameters('adBDCNICIPAddress')]"
    //        ]
    //      }
    //    }
    //  }
    //},
    //{
    //  "name": "UpdatingSQLWNic",
    //  "type": "Microsoft.Resources/deployments",
    //  "apiVersion": "2015-01-01",
    //  "dependsOn": [
    //    "Microsoft.Resources/deployments/UpdatingDNStoPrimaryADVM"
    //  ],
    //  "properties": {
    //    "mode": "Incremental",
    //    "templateLink": {
    //      "uri": "[variables('configuration').nicTemplateURL]",
    //      "contentVersion": "1.0.0.0"
    //    },
    //    "parameters": {
    //      "location": {
    //        "value": "[resourceGroup().location]"
    //      },
    //      "nicName": {
    //        "value": "[variables('sqlwNicName')]"
    //      },
    //      "ipConfigurations": {
    //        "value": [
    //          {
    //            "name": "ipconfig1",
    //            "properties": {
    //              "privateIPAllocationMethod": "Dynamic",
    //              "subnet": {
    //                "id": "[variables('sqlSubnetRef')]"
    //              }
    //            }
    //          }
    //        ]
    //      },
    //      "dnsServers": {
    //        "value": [
    //          "[parameters('adPDCNICIPAddress')]",
    //          "[parameters('adBDCNICIPAddress')]"
    //        ]
    //      }
    //    }
    //  }
    //},
    //{
    //  "name": "Updatingsql2Nic",
    //  "type": "Microsoft.Resources/deployments",
    //  "apiVersion": "2015-01-01",
    //  "dependsOn": [
    //    "Microsoft.Resources/deployments/UpdatingSQLWNic"
    //  ],
    //  "properties": {
    //    "mode": "Incremental",
    //    "templateLink": {
    //      "uri": "[variables('configuration').nicTemplateURL]",
    //      "contentVersion": "1.0.0.0"
    //    },
    //    "parameters": {
    //      "location": {
    //        "value": "[resourceGroup().location]"
    //      },
    //      "nicName": {
    //        "value": "[concat(variables('vmSettings').sqlVMName, '02-nic')]"
    //      },
    //      "ipConfigurations": {
    //        "value": [
    //          {
    //            "name": "ipconfig1",
    //            "properties": {
    //              "privateIPAllocationMethod": "Dynamic",
    //              "subnet": {
    //                "id": "[variables('sqlSubnetRef')]"
    //              },
    //              "publicIpAddress": {
    //                "id": "[resourceId(resourceGroup().Name,'Microsoft.Network/publicIpAddresses', variables('sql2AddressName'))]"
    //              },
    //              "loadBalancerBackendAddressPools": [
    //                {
    //                  "id": "[variables('derivedIds').sqlBEAddressPoolID]"
    //                }
    //              ]
    //            }
    //          }
    //        ]
    //      },
    //      "dnsServers": {
    //        "value": [
    //          "[parameters('adPDCNICIPAddress')]",
    //          "[parameters('adBDCNICIPAddress')]"
    //        ]
    //      }
    //    }
    //  }
    //},
    //{
    //  "name": "UpdatingSQL1Nic",
    //  "type": "Microsoft.Resources/deployments",
    //  "apiVersion": "2015-01-01",
    //  "dependsOn": [
    //    "Microsoft.Resources/deployments/Updatingsql2Nic"
    //  ],
    //  "properties": {
    //    "mode": "Incremental",
    //    "templateLink": {
    //      "uri": "[variables('configuration').nicTemplateURL]",
    //      "contentVersion": "1.0.0.0"
    //    },
    //    "parameters": {
    //      "location": {
    //        "value": "[resourceGroup().location]"
    //      },
    //      "nicName": {
    //        "value": "[concat(variables('vmSettings').sqlVMName, '01-nic')]"
    //      },
    //      "ipConfigurations": {
    //        "value": [
    //          {
    //            "name": "ipconfig1",
    //            "properties": {
    //              "privateIPAllocationMethod": "Dynamic",
    //              "subnet": {
    //                "id": "[variables('sqlSubnetRef')]"
    //              },
    //              "publicIpAddress": {
    //                "id": "[resourceId(resourceGroup().Name,'Microsoft.Network/publicIpAddresses', variables('sql1AddressName'))]"
    //              },
    //              "loadBalancerBackendAddressPools": [
    //                {
    //                  "id": "[variables('derivedIds').sqlBEAddressPoolID]"
    //                }
    //              ]
    //            }
    //          }
    //        ]
    //      },
    //      "dnsServers": {
    //        "value": [
    //          "[parameters('adPDCNICIPAddress')]",
    //          "[parameters('adBDCNICIPAddress')]"
    //        ]
    //      }
    //    }
    //  }
    //},
    //{
    //  "name": "PreparingAlwaysOnSqlServer",
    //  "type": "Microsoft.Resources/deployments",
    //  "apiVersion": "2015-01-01",
    //  "dependsOn": [
    //    "Microsoft.Resources/deployments/Updatingsql2Nic"
    //  ],
    //  "properties": {
    //    "mode": "Incremental",
    //    "templateLink": {
    //      "uri": "[variables('configuration').preparingAlwaysOnSqlServer]",
    //      "contentVersion": "1.0.0.0"
    //    },
    //    "parameters": {
    //      "sqlVMName": {
    //        "value": "[variables('vmSettings').sqlVMName]"
    //      },
    //      "location": {
    //        "value": "[resourceGroup().location]"
    //      },
    //      "adminUsername": {
    //        "value": "[parameters('adminUsername')]"
    //      },
    //      "adminPassword": {
    //        "value": "[parameters('adminPassword')]"
    //      },
    //      "domainName": {
    //        "value": "[parameters('domainName')]"
    //      },
    //      "sqlAOPrepareModulesURL": {
    //        "value": "[variables('configuration').sqlAOPrepareModulesURL]"
    //      },
    //      "sqlAOPrepareConfigurationFunction": {
    //        "value": "[variables('configuration').sqlAOPrepareConfigurationFunction]"
    //      },
    //      "sqlAOEPName": {
    //        "value": "[variables('sqlAOEPName')]"
    //      },
    //      "sqlServerServiceAccountUserName": {
    //        "value": "[parameters('sqlServerServiceAccountUserName')]"
    //      },
    //      "sqlServerServiceAccountPassword": {
    //        "value": "[parameters('sqlServerServiceAccountPassword')]"
    //      },
    //      "sharePath": {
    //        "value": "[variables('sharePath')]"
    //      },
    //      "adPDCVMName": {
    //        "value": "[variables('vmSettings').adPDCVMName]"
    //      },
    //      "sqlwVMName": {
    //        "value": "[variables('vmSettings').sqlwVMName]"
    //      },
    //      "fswModulesURL": {
    //        "value": "[variables('configuration').fswModulesURL]"
    //      },
    //      "fswConfigurationFunction": {
    //        "value": "[variables('configuration').fswConfigurationFunction]"
    //      },
    //      "autoPatchingDay": {
    //        "value": "[parameters('autoPatchingDay')]"
    //      },
    //      "autoPatchingStartHour": {
    //        "value": "[parameters('autoPatchingStartHour')]"
    //      },
    //      "autoPatchingEnable": {
    //        "value": "[variables(parameters('autoPatchingDay'))]"
    //      },
    //      "numberOfDisks": {
    //        "value": "[parameters('numberOfSqlVMDisks')]"
    //      },
    //      "workloadType": {
    //        "value": "[parameters('workloadType')]"
    //      }
    //    }
    //  }
    //},
    //{
    //  "name": "ConfiguringAlwaysOn",
    //  "type": "Microsoft.Resources/deployments",
    //  "apiVersion": "2015-01-01",
    //  "dependsOn": [
    //    "Microsoft.Resources/deployments/PreparingAlwaysOnSqlServer"
    //  ],
    //  "properties": {
    //    "mode": "Incremental",
    //    "templateLink": {
    //      "uri": "[variables('configuration').configuringAlwaysOn]",
    //      "contentVersion": "1.0.0.0"
    //    },
    //    "parameters": {
    //      "sqlVMName": {
    //        "value": "[variables('vmSettings').sqlVMName]"
    //      },
    //      "location": {
    //        "value": "[resourceGroup().location]"
    //      },
    //      "adminUsername": {
    //        "value": "[parameters('adminUsername')]"
    //      },
    //      "adminPassword": {
    //        "value": "[parameters('adminPassword')]"
    //      },
    //      "domainName": {
    //        "value": "[parameters('domainName')]"
    //      },
    //      "sqlAOEPName": {
    //        "value": "[variables('sqlAOEPName')]"
    //      },
    //      "sqlServerServiceAccountUserName": {
    //        "value": "[parameters('sqlServerServiceAccountUserName')]"
    //      },
    //      "sqlServerServiceAccountPassword": {
    //        "value": "[parameters('sqlServerServiceAccountPassword')]"
    //      },
    //      "createClusterModulesURL": {
    //        "value": "[variables('configuration').createClusterModulesURL]"
    //      },
    //      "createClusterConfigurationFunction": {
    //        "value": "[variables('configuration').createClusterConfigurationFunction]"
    //      },
    //      "clusterName": {
    //        "value": "[variables('clusterName')]"
    //      },
    //      "sharePath": {
    //        "value": "[variables('sharePath')]"
    //      },
    //      "sqlAOAGName": {
    //        "value": "[parameters('sqlAOAGName')]"
    //      },
    //      "sqlAOListenerName": {
    //        "value": "[parameters('sqlAOListenerName')]"
    //      },
    //      "sqlAOListenerPort": {
    //        "value": "[parameters('sqlAOListenerPort')]"
    //      },
    //      "sqlLBName": {
    //        "value": "[variables('lbSettings').sqlLBName]"
    //      },
    //      "sqlLBIPAddress": {
    //        "value": "[parameters('sqlLBIPAddress')]"
    //      },
    //      "adPDCVMName": {
    //        "value": "[variables('vmSettings').adPDCVMName]"
    //      },
    //      "sqlwVMName": {
    //        "value": "[variables('vmSettings').sqlwVMName]"
    //      },
    //      "numberOfDisks": {
    //        "value": "[parameters('numberOfSqlVMDisks')]"
    //      },
    //      "workloadType": {
    //        "value": "[parameters('workloadType')]"
    //      }
    //    }
    //  }
    //}
  ],
  "outputs": {}
}
